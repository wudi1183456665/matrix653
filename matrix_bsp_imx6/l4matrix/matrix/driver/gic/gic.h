/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                   嵌入式实时操作系统
**
**                                SylixOS(TM)  LW : long wing
**
**                               Copyright All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: armGic.h
**
** 创   建   人: Jiao.JinXing(焦进星)
**
** 文件创建日期: 2013 年 12 月 12 日
**
** 描        述: 通用中断控制器.
*********************************************************************************************************/
#ifndef __GIC_H
#define __GIC_H
/*********************************************************************************************************
  中断控制器使用到的一些常量
*********************************************************************************************************/
#define GIC_IPI_INT_VEC(cpuid)              cpuid                       /*  核间 中断 ID                */
#define GIC_IPI_INT_PRIO                    0                           /*  核间 中断优先级             */
#define GIC_TICK_INT_VEC                    27                          /*  TICK 中断 ID                */
#define GIC_TICK_INT_PRIO                   1                           /*  TICK 中断优先级             */
#define GIC_DEFAULT_INT_PRIO                127                         /*  默认 中断优先级             */
/*********************************************************************************************************
  发送一个软件产生中断时的选项
*********************************************************************************************************/
#define GIC_SW_INT_OPTION_USE_TARGET_LIST   (0)                        /*  使用 TargetList 变量        */
#define GIC_SW_INT_OPTION_ALL_OTHER_CPUS    (1)                        /*  所有其它 CPU 接收中断       */
#define GIC_SW_INT_OPTION_ONLY_THIS_CPU     (2)                        /*  仅当前 CPU 接收中断         */
/*********************************************************************************************************
** 函数名称: armGicEnable
** 功能描述: 使能 GIC 发布器(使能后安全和非安全中断会传递给 CPU 接口)
** 输　入  : bEnable           是否使能
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicEnable(BOOL  bEnable);
/*********************************************************************************************************
** 函数名称: armGicIrqSecuritySet
** 功能描述: 中断安全模式设置
** 输　入  : uiIrqID           中断号
**           bSecurity         安全模式
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicIrqSecuritySet(UINT32  uiIrqID, BOOL  bSecurity);
/*********************************************************************************************************
** 函数名称: armGicIrqEnable
** 功能描述: 中断使能
** 输　入  : uiIrqID           中断号
**           bEnable           是否使能
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicIrqEnable(UINT32  uiIrqID, BOOL  bEnable);
/*********************************************************************************************************
** 函数名称: armGicIrqIsEnable
** 功能描述: 判断中断是否使能
** 输　入  : uiIrqID           中断号
** 输　出  : 中断是否使能
** 全局变量:
** 调用模块:
*********************************************************************************************************/
BOOL  armGicIrqIsEnable(UINT32  uiIrqID);
/*********************************************************************************************************
** 函数名称: armGicIrqPrioritySet
** 功能描述: 设置中断优先级
** 输　入  : uiIrqID           中断号
**           uiPriority        优先级(0 - 255, 0 为最高优先级)
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicIrqPrioritySet(UINT32  uiIrqID, UINT32  uiPriority);
/*********************************************************************************************************
** 函数名称: armGicIrqTargetSet
** 功能描述: 中断目标设置
** 输　入  : uiIrqID           中断号
**           uiCpuMask         目标处理器位组(位 0 代表 CPU 0, 依此类推）
**           bEnable           是否使能
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicIrqTargetSet(UINT32  uiIrqID, UINT32  uiCpuMask, BOOL  bEnable);
/*********************************************************************************************************
** 函数名称: armGicIrqTargetGet
** 功能描述: 获得中断目标
** 输　入  : uiIrqID           中断号
**           puiCpuId          目标处理器ID(从0开始)
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicIrqTargetGet(UINT32  uiIrqID, UINT32  *puiCpuId);
/*********************************************************************************************************
** 函数名称: armGicSoftwareIntSend
** 功能描述: 发送软件中断
** 输　入  : uiIrqID           中断号
**           uiOption          选项
**           uiTargetList      目标处理器位组(位 0 代表 CPU 0, 依此类推,
**                             当 uiOption 为 GIC_SW_INT_OPTION_USE_TARGET_LIST 时有效)
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicSoftwareIntSend(UINT32  uiIrqID, UINT32  uiOption, UINT32  uiTargetList);
/*********************************************************************************************************
** 函数名称: armGicCpuEnable
** 功能描述: 使能当前 CPU 到 GIC 的接口
** 输　入  : bEnable           是否使能
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicCpuEnable(BOOL  bEnable);
/*********************************************************************************************************
** 函数名称: armGicCpuPriorityMaskSet
** 功能描述: 设置当前 CPU 的优先级掩码
** 输　入  : uiPriority        能够传递到当前 CPU 的中断的最低优先级(255 表示所有中断)
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicCpuPriorityMaskSet(UINT32  uiPriority);
/*********************************************************************************************************
** 函数名称: armGicIrqReadAck
** 功能描述: 通知 GIC 开始处理中断
** 输　入  : NONE
** 输　出  : 当前 CPU 可以处理的最高优先级中断的中断号(1022 或 1023 时, 表示发生了一个假的中断)
** 全局变量:
** 调用模块:
**
** Normally, this function is called at the beginning of the IRQ handler. It tells the GIC
** that you are starting to handle an interupt, and returns the number of the interrupt you
** need to handle. After the interrupt is handled, you should call armGicIrqWriteDone()
** to signal that the interrupt is completely handled.
**
** In some cases, a spurious interrupt might happen. One possibility is if another CPU handles
** the interrupt. When a spurious interrupt occurs, the end of the interrupt should be indicated
** but nothing else.
**
** @return The number for the highest priority interrupt available for the calling CPU. If
**     the return value is 1022 or 1023, a spurious interrupt has occurred.
**
*********************************************************************************************************/
UINT32  armGicIrqReadAck(VOID);
/*********************************************************************************************************
** 函数名称: armGicIrqWriteDone
** 功能描述: 通知 GIC 完成处理中断
** 输　入  : uiIrqID           中断号
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicIrqWriteDone(UINT32  uiIrqID);
/*********************************************************************************************************
** 函数名称: armGicInit
** 功能描述: 初始化 GIC
** 输　入  : NONE
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicInit(VOID);
/*********************************************************************************************************
** 函数名称: armGicCpuInit
** 功能描述: 初始化当前 CPU 使用 GIC 接口
** 输　入  : bPreemption            是否使用中断抢占
**           uiPriority             能够传递到当前 CPU 的中断的最低优先级(255 表示所有中断)
** 输　出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicCpuInit(BOOL  bPreemption,  UINT32  uiPriority);
/*********************************************************************************************************
** 函数名称: armGicIntVecterEnable
** 功能描述: 使能指定的中断向量
** 输  入  : ulVector         向量
**           bSecurity        安全模式
**           ulPriority       优先级
**           uiCpuMask        目标处理器位组(位 0 代表 CPU 0, 依此类推）
** 输  出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicIntVecterEnable(ULONG  ulVector,  BOOL  bSecurity, ULONG  ulPriority, ULONG  uiCpuMask);
/*********************************************************************************************************
** 函数名称: armGicIntVecterDisable
** 功能描述: 禁能指定的中断向量
** 输  入  : ulVector         向量
** 输  出  : NONE
** 全局变量:
** 调用模块:
*********************************************************************************************************/
VOID  armGicIntVecterDisable(ULONG  ulVector);

#endif                                                                  /*  __GIC_H                     */
/*********************************************************************************************************
  END
*********************************************************************************************************/
