#ifndef ASSEMBLY
#define ASSEMBLY 1
#endif


#include <arch/arch_assembler.h>
#include "../config.h"


	FILE_BEGIN()

;/*********************************************************************************************************
;  声明外部函数和导出全局函数
;*********************************************************************************************************/

	IMPORT_LABEL(bspInit)

	EXPORT_LABEL(_start)

;/*********************************************************************************************************
;  The bsp header. It must come first.
;*********************************************************************************************************/

	SECTION(.bsp.header)

FUNC_DEF(start)
LINE_LABEL(_start)


;/*  关闭中断 */
    XOR     R3 , R3 , R3
    ISYNC
    MTMSR   R3
    ISYNC
;/*********************************************************************************************************
;  初始化 stack
;*********************************************************************************************************/

	LINE_LABEL(ppcSpInit)
    LIS     SP , HI(__stack_end)
    ORI     SP , SP , LO(__stack_end)
    SYNC

;/*********************************************************************************************************
;  清零 BSS 段
;*********************************************************************************************************/

LINE_LABEL(ppcBssClear)
    ADDIS   R4 , 0  , HI(__bss_start)
    ORI     R4 , R4 , LO(__bss_start)

    ADDIS   R7 , 0  , HI(__bss_end)
    ORI     R7 , R7 , LO(__bss_end)

    ADDIS   R5 , 0  , 0x0000

LINE_LABEL(cont2)
    STWX    R5 , 0 , R4

    ADDI    R4 , R4 , 4

    CMP     CR0, 0  , R4 , R7
    BLE     cont2

    SYNC
;/*********************************************************************************************************
;  进入 bspInit 函数 (argc = 0 , argv = NULL , frame pointer = NULL)
;*********************************************************************************************************/

    BL      bspInit

    FUNC_END()
