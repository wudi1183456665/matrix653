/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                   嵌入式实时操作系统
**
**                                SylixOS(TM)  LW : long wing
**
**                               Copyright All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: x86_types.h
**
** 创   建   人: Wang.Dongfang (王东方)
**
** 文件创建日期: 2017 年 10 月 31 日
**
** 描        述: x86 数据类型定义.
*********************************************************************************************************/

#ifndef __X86_ARCH_TYPES_H
#define __X86_ARCH_TYPES_H

/*********************************************************************************************************
  void 类型
*********************************************************************************************************/

typedef          void               VOID;                               /*  void   类型                 */

/*********************************************************************************************************
  编译器相关数据类型定义
*********************************************************************************************************/

typedef          int                BOOL;                               /*  布尔变量定义                */

typedef          void              *PVOID;                              /*  void * 类型                 */
typedef const    void              *CPVOID;                             /*  const void  *               */

typedef          char               CHAR;                               /*  8 位字符变量                */
typedef unsigned char               UCHAR;                              /*  8 位无符号字符变量          */
typedef unsigned char              *PUCHAR;                             /*  8 位无符号字符变量指针      */
typedef          char              *PCHAR;                              /*  8 位字符指针变量            */
typedef const    char              *CPCHAR;                             /*  const char  *               */

typedef unsigned char               BYTE;                               /*  8 位字节变量                */
typedef unsigned char              *PBYTE;                              /*  8 位字节变量指针            */

typedef          long               LONG;                               /*  32/64 位数定义              */
typedef unsigned long               ULONG;                              /*  32/64 位无符号数定义        */

typedef          int                INT;                                /*  编译器相关 int              */
typedef unsigned int                UINT;                               /*  编译器相关 unsigned int     */

/*********************************************************************************************************
  注意: INT8 必须是 signed 型. 这样 int8_t 才能保证是 signed 型.
        很多编译器默认 char 是 unsigned. 所以这里必须强制将 INT8 定义为 signed 型.
*********************************************************************************************************/

typedef signed   char               INT8;                               /*  char                        */
typedef unsigned char               UINT8;                              /*  8  位无符号数定义           */

typedef          short              INT16;                              /*  short                       */
typedef unsigned short              UINT16;                             /*  16 位无符号数定义           */

typedef          int                INT32;                              /*  long or int                 */
typedef unsigned int                UINT32;                             /*  32 位无符号数定义           */

typedef          long long          INT64;                              /*  long long                   */
typedef unsigned long long          UINT64;                             /*  64 位无符号数定义           */

/*********************************************************************************************************
  地址相关类型.
*********************************************************************************************************/

typedef ULONG                       addr_t;
typedef ULONG                       size_t;

/*********************************************************************************************************
  fast variable
*********************************************************************************************************/

#define REGISTER                    register                            /*  寄存器变量                  */

#endif                                                                  /*  __X86_ARCH_TYPES_H          */
/*********************************************************************************************************
  END
*********************************************************************************************************/
