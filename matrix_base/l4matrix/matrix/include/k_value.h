/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                嵌入式 L4 微内核操作系统
**
**                                SylixOS(TM)  MX : matrix
**
**                               Copyright All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: k_value.h
**
** 创   建   人: Wang.Dongfang (王东方)
**
** 文件创建日期: 2017 年 11 月 17 日
**
** 描        述: 这是系统特殊变量附值量定义.
*********************************************************************************************************/

#ifndef  __K_VALUE_H
#define  __K_VALUE_H

/*********************************************************************************************************
  BOOL
*********************************************************************************************************/
#define MX_FALSE                        (0)                             /*  0x0                         */
#define MX_TRUE                         (1)                             /*  0x1                         */

#ifndef TRUE
#define TRUE                            MX_TRUE
#endif                                                                  /*  TRUE                        */

#ifndef FALSE
#define FALSE                           MX_FALSE
#endif                                                                  /*  FALSE                       */
/*********************************************************************************************************
  NULL
*********************************************************************************************************/
#define MX_NULL                         ((PVOID)0)                      /*  C 下的 NULL                 */

#ifndef NULL
#define NULL                            MX_NULL
#endif                                                                  /*  NULL                        */
/*********************************************************************************************************
  特殊内核对象 ID
*********************************************************************************************************/
#define MX_OBJECT_INVALID               0
/*********************************************************************************************************
  自旋锁驱动返回值
*********************************************************************************************************/
#define MX_SPIN_OK                      1
#define MX_SPIN_ERROR                   0
/*********************************************************************************************************
  CACHE MODE DEFINE 
*********************************************************************************************************/
#define CACHE_DISABLED                  0x00                            /*  CACHE 旁路模式              */
#define CACHE_WRITETHROUGH              0x01                            /*  CACHE 写通模式              */
#define CACHE_COPYBACK                  0x02                            /*  CACHE 回写模式              */

#define CACHE_SNOOP_DISABLE             0x00                            /*  CACHE 可能与内存数据不一致  */
#define CACHE_SNOOP_ENABLE              0x10                            /*  总线检视, CACHE 与内存一致  */
/*********************************************************************************************************
  ROUND_UP
*********************************************************************************************************/
#ifndef ROUND_UP
#define ROUND_UP(x, align)              (ULONG)(((ULONG)(x) +  (align - 1)) & ~(align - 1))
#endif                                                                  /*  ROUND_UP                    */

#ifndef ROUND_DOWN
#define ROUND_DOWN(x, align)            (ULONG)((ULONG)(x) & ~(align - 1))
#endif                                                                  /*  ROUND_DONW                  */

#ifndef IS_ALIGNED
#define IS_ALIGNED(x, align)            (((ULONG)(x) & (align - 1)) == 0)
#endif                                                                  /*  IS_ALIGNED                  */
/*********************************************************************************************************
  MIN
*********************************************************************************************************/
#ifndef MIN
#define MIN(a, b)                       (((a) > (b)) ? (b) : (a))
#endif                                                                  /*  MIN                         */

#ifndef MAX
#define MAX(a, b)                       (((a) > (b)) ? (a) : (b))
#endif                                                                  /*  MAX                         */
/*********************************************************************************************************
  Virtual Address to Physical Address
*********************************************************************************************************/
#define MX_VIRT_2_PHYS(x)               (((ULONG)x) - 0xC0000000 + 0x10000000)
/*********************************************************************************************************
  local function
*********************************************************************************************************/
#define MX_STATIC                       static
/*********************************************************************************************************
  micro-second
*********************************************************************************************************/
#define MX_MSECOND_TO_TICK_1(ulMs)      \
        (((ulMs * CLOCKS_PER_SEC) / 1000) ? ((ulMs * CLOCKS_PER_SEC) / 1000) : (1))
         
#define MX_MSECOND_TO_TICK_0(ulMs)      \
        ((ulMs * CLOCKS_PER_SEC) / 1000)
/*********************************************************************************************************
  CACHE LINE ALIGN
*********************************************************************************************************/
//#define MX_CACHE_LINE_ALIGN             __attribute__((aligned(16*1024)))
#define MX_CACHE_LINE_ALIGN             __attribute__((aligned(MX_CFG_CPU_ARCH_CACHE_LINE)))
/*********************************************************************************************************
  user stack ALIGN
*********************************************************************************************************/
#define MX_STACK_ALIGN                  __attribute__((aligned(8)))
/*********************************************************************************************************
  MX_VCPU table SECTION
*********************************************************************************************************/
#define MX_VCPU_SECTION                 __attribute__((__section__(".vcpu_kstack")))
/*********************************************************************************************************
  boot section
*********************************************************************************************************/
#define MX_BTXT_SEC                     __attribute__((__section__(".boot.text")))
#define MX_BDAT_SEC                     __attribute__((__section__(".boot.data")))
/*********************************************************************************************************
  调度时间片
*********************************************************************************************************/
#define MX_VCPU_SCHED_SLICE             10
/*********************************************************************************************************
  等待时间
*********************************************************************************************************/
#define MX_WAIT_NONE                    0x00000000                      /*  不等待立即退出              */
#define MX_WAIT_INFINITE                __ARCH_ULONG_MAX                /*  永远等待                    */
#define MX_WAIT_A_TICK                  0x00000001                      /*  等待一个时钟嘀嗒            */
#define MX_WAIT_A_SECOND                CLOCKS_PER_SEC                  /*  等待一秒                    */

#endif                                                                  /*  __K_VALUE_H                 */
/*********************************************************************************************************
  END
*********************************************************************************************************/

