/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                嵌入式 L4 微内核操作系统
**
**                                SylixOS(TM)  MX : matrix
**
**                               Copyright All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: k_types.h
**
** 创   建   人: Wang.Dongfang (王东方)
**
** 文件创建日期: 2018 年 01 月 09 日
**
** 描        述: 内核基础类型.
*********************************************************************************************************/

#ifndef __K_TYPES_H
#define __K_TYPES_H

/*********************************************************************************************************
  错误码类型
*********************************************************************************************************/
typedef ULONG                   MX_ERROR;                               /*  系统错误码类型              */
/*********************************************************************************************************
  size_t
*********************************************************************************************************/
#if 0
#ifndef __size_t_defined
typedef ULONG                   size_t;
#define __size_t_defined 1
#endif
#ifndef __ssize_t_defined
typedef LONG                    ssize_t;
#define __ssize_t_defined 1
#endif
#endif
/*********************************************************************************************************
  字对齐的堆栈类型
*********************************************************************************************************/
typedef ULONG                   MX_STACK;
typedef ULONG                  *PMX_STACK;
/*********************************************************************************************************
  内核对象 ID
*********************************************************************************************************/
typedef UINT32                  MX_OBJECT_ID;
/*********************************************************************************************************
  CACHE MODE
*********************************************************************************************************/
typedef UINT                    CACHE_MODE;                             /*  CACHE 模式                  */
/*********************************************************************************************************
  页表指针
*********************************************************************************************************/
typedef VOID                   *MX_PAGE_TABLE;                          /*  页表指针                    */
/*********************************************************************************************************
  函数类型
*********************************************************************************************************/
typedef VOID                  (*IRQ_FUNCPTR)(UINT32          uiIrqNum,  /*  用户注册的中断服务函数类型  */
                                             PARCH_USER_CTX  puctxSP);
typedef INT                   (*INT_FUNCPTR)();                         /*  返回 int 的函数类型         */
typedef VOID                  (*VOID_FUNCPTR)();                        /*  返回 void 的函数类型        */
/*********************************************************************************************************
  spinlock_t
*********************************************************************************************************/
typedef struct {
    volatile SPINLOCKTYPE       SL_sltData;                             /*  自旋锁                      */
    volatile PVOID              SL_pcpuOwner;                           /*  物理 CPU 结构体指针         */
    ULONG                       SL_ulCounter;                           /*  锁定计数器                  */
} spinlock_t;


#define MX_SPINLOCK_DEFINE_CACHE_ALIGN(s1)	spinlock_t	s1	MX_CACHE_LINE_ALIGN
/*********************************************************************************************************
  内核锁结构
*********************************************************************************************************/
typedef struct {
    spinlock_t                  KERN_slLock;                            /*  自旋锁                      */
    MX_OBJECT_ID                KERN_ulKernelOwner;                     /*  当前哪个 vCPU 占用内核      */
} MX_KERN_LOCK;
typedef MX_KERN_LOCK           *PMX_KERN_LOCK;

#endif                                                                  /*  __K_TYPES_H                 */
/*********************************************************************************************************
  END
*********************************************************************************************************/

