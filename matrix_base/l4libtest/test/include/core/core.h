/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                嵌入式 L4 微内核操作系统
**
**                                SylixOS(TM)  MX : matrix
**
**                               Copyright All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: api.h
**
** 创   建   人: Cheng.Yongbin (程永斌)
**
** 文件创建日期: 2018 年 2 月 1 日
**
** 描        述: 应用运行时环境抽象
*********************************************************************************************************/
#ifndef __T_CORE_H
#define __T_CORE_H
/*********************************************************************************************************
  宏定义
*********************************************************************************************************/
/*
 * 优先级
 */
#define  TVCPU_PRIO_HIGH        150
#define  TVCPU_PRIO_NORMAL      200
#define  TVCPU_PRIO_LOW         250
/*********************************************************************************************************
  exec
*********************************************************************************************************/
struct t_vcpu_stk {
    addr_t      addrMsg;
    addr_t      addrStkTop;                                             /*  根据配置栈生长方向确定栈顶  */
                                                                        /*  地址                        */
} __attribute__((aligned(T__USE_STK_SIZE)));
typedef struct t_vcpu_stk       T_VCPU_STK;
typedef        T_VCPU_STK      *PT_VCPU_STK;

VOID        T_vcpuStkInit(PT_VCPU_STK  pStk, PMX_IPC_MSG  pMsg);
PT_VCPU_STK T_vcpuGetCurStk();
PMX_IPC_MSG T_vcpuGetCurMsg();

#define T_GET_KERN_MSG()                                \
        (IPC_VCPU_TO_IPC(vcpuGetCur())->IPC_pMsg)
/*********************************************************************************************************
  VCPU
*********************************************************************************************************/
typedef struct {
    MX_OBJECT_ID            objPt;                                      /*  进程 ID */
    MX_OBJECT_ID            objVcpu;                                    /*  线程 ID */
    PVCPU_START_ROUTINE     pfuncStart;                                 /*  线程函数 */
    PVOID                   pvArg;                                      /*  线程函数参数 */
    UINT32                  uiPriority;                                 /*  线程优先级  */
    addr_t                  addrStack;
    PMX_IPC_MSG             pIpcMsg;
} T_VCPU;
typedef T_VCPU      *PT_VCPU;

PT_VCPU T_vcpuCreate(MX_OBJECT_ID  objPt, PVCPU_START_ROUTINE  pRount,
                     UINT32  uiPriority);
BOOL    T_vcpuStart(PT_VCPU  pVcpu);
VOID    T_vcpuSleep(SC_TIME  time);
VOID    T_vcpuWakeup(MX_OBJECT_ID  objVcpu);
/*********************************************************************************************************
  IPC
*********************************************************************************************************/



#endif                                                                  /*  __T_CORE_H                  */
/*********************************************************************************************************
  END
*********************************************************************************************************/
