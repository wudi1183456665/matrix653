;/*********************************************************************************************************
;**
;**                                    中国软件开源组织
;**
;**                                   嵌入式实时操作系统
;**
;**                                       SylixOS(TM)
;**
;**                               Copyright  All Rights Reserved
;**
;**--------------文件信息--------------------------------------------------------------------------------
;**
;** 文   件   名: armCtx.S
;**
;** 创   建   人: Wang.Dongfang (王东方)
;**
;** 文件创建日期: 2018 年 03 月 05 日
;**
;** 描        述: arm 体系构架上下文切换.
;*********************************************************************************************************/

#ifndef ASSEMBLY
#define ASSEMBLY 1
#endif

#include <arch/arch_assembler.h>

    FILE_BEGIN()

;/*********************************************************************************************************
;  ARM 体系构架相关上下文函数
;*********************************************************************************************************/

    IMPORT_LABEL(l_main)
    IMPORT_LABEL(MXI_vcpuDisableInt)

    EXPORT_LABEL(_start)

;/*********************************************************************************************************
;  用户进程入口函数
;*********************************************************************************************************/
    .section .boot, "ax"

FUNC_DEF(_start)

;/*********************************************************************************************************
;  关中断
;*********************************************************************************************************/

    LDR     R10, =MXI_vcpuDisableInt
    MOV     LR, PC
    BX      R10
;/*********************************************************************************************************
;  初始化堆栈
;*********************************************************************************************************/

    LDR     R0 , =__stack_end                                          ;/*  栈区顶端地址                 */
    MOV     SP, R0

;/*********************************************************************************************************
;  清 0 BSS 段
;*********************************************************************************************************/

    MOV     R0, #0                              ;/*  get a zero                                          */
    LDR     R1, =__bss_start                    ;/*  -> bss start                                        */
    LDR     R2, =__bss_end                      ;/*  -> bss end                                          */
LINE_LABEL(2)
    CMP     R1, R2                              ;/*  check if data to clear                              */
    STRLO   R0, [R1], #4                        ;/*  clear 4 bytes                                       */
    BLO     2b                                  ;/*  loop until done                                     */

    DSB

;/*********************************************************************************************************
;  调用 l_main 函数
;*********************************************************************************************************/

    LDR     R10, =l_main
    MOV     LR, PC
    BX      R10

    FUNC_END()

    FILE_END()

;/*********************************************************************************************************
;  END
;*********************************************************************************************************/


